// protoc --go_out=./proto/user/ --micro_out=./proto/user ./proto/user/user.proto
syntax = "proto3";

option go_package = "./;go_micro_service_user";

service User {
	rpc GetInfoByUniqueId(GetInfoByUniqueIdRequest) returns (GetInfoByUniqueIdResponse) {}
	rpc GetInfoByUserId(GetInfoByUserIdRequest) returns (GetInfoByUserIdResponse) {}
	rpc GetListByUserId(GetListByUserIdRequest) returns (GetListByUserIdResponse) {}
	rpc Add(AddRequest) returns (AddResponse) {}
	rpc CreateToken(CreateTokenRequest) returns (CreateTokenResponse) {}
	rpc GetUserInfoByToken(GetUserInfoByTokenRequest) returns (GetUserInfoByTokenResponse) {}
}

message BaseUser {
    int64 user_id = 1;
    string nickname = 2;
    string avatar = 3;
}

message UserInfo {
    int64 user_id = 1;
    string unique_id = 2;
    string nickname = 3;
    string avatar = 4;
}

message GetInfoByUniqueIdRequest {
    string unique_id = 1;
}

message GetInfoByUniqueIdResponse {
    UserInfo user = 1;
}

message GetInfoByUserIdRequest {
    int64 user_id = 1;
}

message GetInfoByUserIdResponse {
    UserInfo user = 1;
}

message GetListByUserIdRequest {
    repeated int64 user_ids = 1;
}

message GetListByUserIdResponse {
    repeated BaseUser users = 1;
}

message AddRequest {
    string unique_id = 1;
    string nickname = 2;
    string avatar = 3;
}

message AddResponse {
    int64 user_id = 1;
}

message CreateTokenRequest {
    int64 user_id = 1;
}

message CreateTokenResponse {
    string token = 2;
    string expired_at = 3;
}

message GetUserInfoByTokenRequest {
    string token = 1;
}

message GetUserInfoByTokenResponse {
    UserInfo user = 1;
}

